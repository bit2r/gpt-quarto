[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "챗GPT 쿼토(Quarto)",
    "section": "",
    "text": "서문\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n#&gt; [1] 2",
    "crumbs": [
      "서문"
    ]
  },
  {
    "objectID": "dw_website.html",
    "href": "dw_website.html",
    "title": "1  웹사이트와 블로그",
    "section": "",
    "text": "1.1 웹사이트\n저작물을 파일형태 뿐만 아니라 웹사이트에 공유하는 것은 코로나19로 촉발된 디지털 전환(Digital Transformation) 시대에 과학기술 종사자 뿐만 아니라 현대를 사는 누구나 갖춰야 하는 보편적인 기술로 자리잡아 가고 있다. 통상 http://netlify.com/ 혹은 https://github.com/ 웹사이트에서 제공하는 정적 웹사이트(Static Website) 기능을 활용하여 제작된 블로그나 웹사이트를 통해 공유하는 것이 데이터 과학자 사이에 어느새 일반화되었다.\n과학기술 저작물을 정적 웹사이트에 호스팅하여 공유한다는 것은 지금까지와는 다른 기술적 배경을 가지기 때문에 이러한 문제를 해결하기 위해 몇년전 distill 팩키지가 방향을 제시했다. distill 팩키지로 블로그 혹은 웹사이트 과학기술 콘텐츠 공유를 공유한 웹사이트를 종종 구글링 과정에서 살펴봤을 것이다.\n저작 웹사이트를 RStudio + 쿼토(quarto) 를 조합하여 로컬에서 정적 웹사이트를 먼저 제작하고 공유와 배포는 GitHub Pages, Netlify, 쿼토 펍(Quarto Pub) 등으로 별다른 비용없이 무료로 출판할 수 있다.",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#project-setup",
    "href": "dw_website.html#project-setup",
    "title": "1  웹사이트와 블로그",
    "section": "1.2 프로젝트 생성",
    "text": "1.2 프로젝트 생성\n쿼토(quarto) 설치하고 정적 웹사이트 제작을 위한 프로젝트를 준비한다. 문서로 웹사이트 개발을 위한 RStudio IDE를 통합개발환경으로 선택한 경우 File → New Project ... → Project Type 에서 Quarto Website를 선택한다.\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n그림 1.1: (정적) 웹사이트 프로젝트 선택과정\n\n\n\n다음 단계로 웹사이트가 담길 디렉토리를 지정하고 웹사이트 디렉토리를 생성하고 Create Project 버튼을 를 클릭한다. 쿼토 웹사이트 프로젝트가 생성되면 웹사이트 제작을 위한 기본 골격이 제시된다. _quarto.yml 파일에 웹사이트 기본 정보가 담겨지고 각 웹페이지는 index.qmd, about.qmd 파일로 저작한다.\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n그림 1.2: 쿼토 웹사이트 프로젝트 생성",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#project-writing",
    "href": "dw_website.html#project-writing",
    "title": "1  웹사이트와 블로그",
    "section": "1.3 웹사이트 저작",
    "text": "1.3 웹사이트 저작\n문서의 구조를 정의하는 _quarto.yml 파일에 웹사이트 문법을 적용하여 웹페이지는 .qmd 파일, 외양은 .css 혹은 .scss 파일에 정리한다. 관련하여 웹사이트를 구성하는 이미지, 동영상, 소리를 비롯한 각종 자산(assets)도 웹페이지에 잘 담기도록 저작한다.\n쿼토 웹사이트 프로젝트는 웹사이트 기본골격을 다음 파일과 디렉토리를 통해 제공된다. _site/ 디렉토리는 쿼토 웹사이트를 컴파일하게 되면 자동 생성된다. _site/ 디렉토리에 index.qmd 파일을 컴파일한 index.html 파일을 비롯한 정적 웹사이트 저작을 위한 각종 파일과 디렉토리로 채워진다.\n쿼토 웹사이트를 컴파일하는 방식은 Ctrl + Shift + K 단축키를 누르거나, 상단 Render 버튼을 클릭하거나, CTRL + SHIFT + B 단축키를 누르거나, Build에 Render Website를 클릭한다.\n\n_quarto.yml\nindex.rmd\nabout.rmd\n_site/\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n그림 1.3: 로컬 웹사이트 컴파일\n\n\n\n_site/ 디렉토리는 정적 웹사이트가 배포되는 디렉토리로,\n기본적으로 http://netlify.com/를 상정한 경우 _site/를 사용하지만, docs/로 바꿔주게 되면 GitHub Pages 웹호스팅으로 사용하여 배포할 수 있게 된다. GitHub Pages 배포를 위해 _quarto.yaml 파일에 output-dir: docs을 추가하게 되면 정적 웹사이트가 _docs 폴더에 담기게 된다.\n요약하면 _quarto.yml 파일을 열어 output_dir: 설정이 없는 경우 output_dir: docs로 지정하고, 이미 존재하는 경우 output_dir: 값을 _site → docs으로 변경한다. 그리고 나서 쿼토 웹사이트를 빌드시키면 웹사이트 전체가 docs/ 디렉토리에 저장된다. 이것을 GitHub 저장소에 업로드하거나 push 해서 올리게 되면 블로그 웹사이트가 https://&lt;사용자명&gt;.github.io/&lt;저장소명&gt;/index.html을 통해 배포된다.\n\n\n``` {{yaml}}\nproject:\n  type: website\n```\n\n\n\n``` {{yaml}}\nproject:\n  type: website\n  output-dir: docs\n```",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#theme-distill",
    "href": "dw_website.html#theme-distill",
    "title": "1  웹사이트와 블로그",
    "section": "1.4 외양 - 폰트, 색상 등",
    "text": "1.4 외양 - 폰트, 색상 등\n지금까지 전반적인 웹사이트 생성과 웹페이지 콘텐츠 작성과 관련된 전반적인 작업흐름에 집중했다면 글꼴, 색상 등 외양을 바꾸면 근사한 웹사이트로 탈바꿈시킬 수 있다. 특히 쿼토는 부츠트랩 5(Bootstrap 5)를 지원하기 때문에 SCSS 변수 설정을 통해 멋진 웹사이트를 꾸밀 수 있다.\n글꼴만 한글로 바꿔 tidyverse.css를 저장한다. 기본 아이디어는 구글 글꼴 웹사이트 https://fonts.google.com/ 에서 한글 글꼴을 가져와서 웹사이트 제목과 텍스트에 글꼴을 저작자의 선택에 맞춰 반영한다. 수정한 tidyverse.css 파일 일부는 다음과 같다.\n```{css}\n#| eval: false\n\n@import url('https://fonts.googleapis.com/css2?family=Sunflower');\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR');\n@import url('https://fonts.googleapis.com/css2?family=Gaegu');\n\nhtml {\n  /*-- Main font sizes --*/\n  --title-size:      50px;\n  --body-size:       1.06rem;\n  --code-size:       14px;\n  --aside-size:      12px;\n  --fig-cap-size:    13px;\n  /*-- Main font colors --*/\n  --title-color:     #000000;\n  --header-color:    rgba(0, 0, 0, 0.8);\n  --body-color:      rgba(0, 0, 0, 0.8);\n  --aside-color:     rgba(0, 0, 0, 0.6);\n  --fig-cap-color:   rgba(0, 0, 0, 0.6);\n  /*-- Specify custom fonts ~~~ must be imported above   --*/\n  --heading-font:    'Sunflower', sans-serif;\n  --mono-font:       \"DM Mono\", monospace;\n  --body-font:       'Noto Sans KR', sans-serif;\n  --navbar-font:     'Gaegu', cursive;\n}\n```",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#deployment-setup",
    "href": "dw_website.html#deployment-setup",
    "title": "1  웹사이트와 블로그",
    "section": "1.5 웹사이트 배포",
    "text": "1.5 웹사이트 배포\n\n1.5.1 GitHub Pages 출판\nhttps://&lt;사용자명&gt;.github.io/ 저장소는 매우 특별한 GitHub 저장소다. 따라서, GitHub 저장소 명칭을 &lt;사용자명&gt;.github.io 으로 생성해야 한다. 예를 들어, statkclee.github.io 와 같이 사용자계정을 github.io와 붙여 먼저 판다. 그리고 나서, 상단 Settings로 들어간 다음 GitHub Pages 설정을 한다. 이때 GitHub 저장소의 특정 디렉토리 docs/ 디렉토리에 담긴 내용 전부가 정적 웹사이트에 게시되는 내용이 된다. 즉, docs/index.html → https://&lt;사용자명&gt;.github.io/&lt;저장소명&gt;/index.html로 바뀌어 웹사이트 생성 및 배포가 완료된다.\n\n\n\n정적 웹사이트 GitHub Pages 연결\n\n\n\n\n1.5.2 Quarto Pub 출판\nQuarto Pub 출판과정은 Quarto CLI를 통해 이뤄진다. RStudio의 내부 터미널을 사용하는 것을 권장하는데, 이유는 RStudio와 Quarto가 잘 통합되어 있어, 간편하게 출판 작업을 진행할 수 있기 때문이다. 1\n$ quarto publish quarto-pub\n? Authorize (Y/n) › \n❯ In order to publish to Quarto Pub you need to\n  authorize your account. Please be sure you are\n  logged into the correct Quarto Pub account in \n  your default web browser, then press Enter or \n  'Y' to authorize.\n첫번째 출판하게 되면 인증작업을 수행하고 나면 _publish.yml 파일이 하나 생성된다.\n- source: project\n  quarto-pub:\n    - id: 1fa3ab1f-c010-453a-aaf2-f462bd074a66\n      url: 'https://quartopub.com/sites/statkclee/quarto-ds'\n이제 모든 준비가 되었기 때문에 다음 명령어로 작성한 출판 문서를 포함한 웹사이트를 로컬에서 미리 확인 한 후에 Quarto Pub으로 전자출판한다. 윈도우에서는 RStudio 내부 Terminal CLI를 사용하는 것을 권장한다.\n$ quarto preview\n$ quarto publish quarto-pub",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#footnotes",
    "href": "dw_website.html#footnotes",
    "title": "1  웹사이트와 블로그",
    "section": "",
    "text": "Quarto Pub↩︎",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_slideshow.html",
    "href": "dw_slideshow.html",
    "title": "\n2  PPT 슬라이드\n",
    "section": "",
    "text": "2.1 헬로월드\n쿼토는 기본적으로 프로젝트를 기반으로 시작하기 때문에 프로젝트를 하나 생성한다. RStudio를 실행하고 우측 상단 Project:(None)을 클릭하여 New Project를 새로운 디렉토리를 만들어 생성한다.\n프로젝트가 생성되면 File → New File → Quarto Presentation...을 클릭하여 쿼토 슬라이드 .qmd 문서파일을 생성한다.\nCtrl + Shift + k 단축키를 눌러 .qmd 파일을 웹슬라이드로 제작할 수 있다. 웹슬라이드 파일명을 helloworld.qmd로 저장한다.\n다운로드 예제 PPT 파일",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>PPT 슬라이드</span>"
    ]
  },
  {
    "objectID": "dw_slideshow.html#헬로월드",
    "href": "dw_slideshow.html#헬로월드",
    "title": "\n2  PPT 슬라이드\n",
    "section": "",
    "text": "그림 2.1: 슬라이드 제작을 위한 프로젝트 생성\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n그림 2.2: 쿼토 프리젠테이션 파일 생성\n\n\n\n\n\n첫번째 웹슬라이드 제작과정",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>PPT 슬라이드</span>"
    ]
  },
  {
    "objectID": "dw_slideshow.html#슬라이드-문법",
    "href": "dw_slideshow.html#슬라이드-문법",
    "title": "\n2  PPT 슬라이드\n",
    "section": "\n2.2 슬라이드 문법",
    "text": "2.2 슬라이드 문법\n쿼토 슬라이드는 pandoc의 마크다운 문법을 기반으로 하고 있으며 reveal.js의 슬라이드 문법을 사용할 수 있다. reveal.js의 슬라이드 문법은 쿼토 프리젠테이션을 참고한다.\n\n2.2.1 슬라이드 생성\n# 기호는 h1 큰제목 슬라이드, ## 기호는 h2 중간제목을 갖는 슬라이드를 생성하여 하나 사고체계를 갖는 발표장표를 구성하고 마찬가지로 또다른 # 기호는 h1 큰제목 슬라이드, ## 기호는 h2 중간제목을 갖는 슬라이드를 생성하면 또 다른 사고체계를 갖는 발표장표를 구성할 수 있다.\n\n\n---\ntitle: \"습관\"\nauthor: \"홍길동\"\nformat: revealjs\n---\n\n# 아침\n\n## 기상\n\n- 알람 끄기\n- 침대에서 일어나기\n\n## 아침 식사\n\n- 콩나물국 먹기\n- 커피 마시기\n\n# 저녁\n\n## 저녁 식사\n\n- 삼겹살과 된장찌개\n- 소주 마시기\n\n## 잠들기\n\n- 양치질 하기\n- 잠자리에 들기\n\n\n\n\n\n\n\n2.2.2 2 칼럼\nPPT 발표자료는 가로 길이가 세로 길이보다 넓은 경우가 대부분이라 2칼럼으로 화면을 분할하는 경우가 많다. 쿼토 슬라이드는 .columns 클래스와 width 속성을 이용하여 2칼럼을 구현한다.\n\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n### 왼쪽 ...\n\n텍스트\n:::\n\n::: {.column width=\"60%\"}\n### 오른쪽 ...\n\n텍스트\n:::\n\n::::\n\n\n\n\n\n\n\n2.2.3 한줄씩 보여주기\nincremental 선택옵션을 사용해서 한줄씩 순차적으로 보여주는 것이 가능하다. 영어로 increnetal reveal 혹은 increamental list 기능이라고 한다. 기본설적은 슬라이드 내의 번호 및 글머리 기호 목록이 한 번에 모두 표시된다. incremental 옵션을 사용하면 한 번에 하나씩 표시된다. 코드에 .nonincremental를 넣게 되면 한줄씩 보여주는 기능을 비활성화 할 수 있다.\n\n\n---\ntitle: \"습관\"\nauthor: \"홍길동\"\nformat:\n  revealjs:\n    incremental: true\n---\n\n# 한줄씩 보여주기\n\n## 한국 R 사용자회 커뮤니티\n\n::: {.incremental}\n\n- Facebook 페북 그룹\n\n- 서울 R 미트업\n\n:::\n\n\n## Seoul R User Group\n\n::: {.nonincremental}\n\n- Facebook Group\n\n- Seoul R Meetup\n\n:::\n\n\n\n\n\n\n\n2.2.4 코드와 그래프\n쿼토 슬라이드는 코드와 그래프를 한 슬라이드에 표시할 수 있다. 코드와 출력결과(표, 그래프, 실행결과 등)을 나란히 표시하거나 출력을 지연하여 다른 슬라이드에 표시하는 것은 강의나 발표에 일반적으로 사용되는 기법이다. 쿼토 슬라이드는 output-location 선택옵션 통해 한줄로 기능 구현이 가능하다. output-location 선택옵션은 fragment, slide, column, column-fragment를 지원하기 때문에 필요에 맞춰 발표자료에 적용한다. output-location: column을 설정하면 코드와 출력결과 그래프가 한 슬라이드에 나타나는데 코드를 중복없이 깔끔하게 작성한다는 점이 큰 장점이다.\n\n\n## 코드 출력결과\n\n#| output-location: column\n#| echo: true\n\nlibrary(ggplot2)\n\nmtcars |&gt; \nggplot(aes(x = wt, y = mpg)) +\n  geom_point() +\n  theme_linedraw()",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>PPT 슬라이드</span>"
    ]
  },
  {
    "objectID": "dw_website.html#블로그를-하는-이유",
    "href": "dw_website.html#블로그를-하는-이유",
    "title": "1  웹사이트와 블로그",
    "section": "1.6 블로그를 하는 이유",
    "text": "1.6 블로그를 하는 이유\n블로그를 작성하고 운영하는 이유를 다음과 같이 들 수 있다.\n\n학습: 강의를 듣거나 무언가 읽어 독서를 통해 학습되는 지식보다 글쓰기를 통해 축적되는 지식이 어떻게 보면 학습 효과가 더 크다. 특히, 학습한 내용을 코드로 작성하여 돌려볼 경우 학습효과를 배가시킨다.\n지식나눔: 구글 검색엔진을 통해 검색된 블로그 게시글을 통해 짧은 시간 학습에 도움을 받지만, 마찬가지로 본인이 작성한 블로그 게시글이 다른 사람에게 도움을 주는 것도 사실이다. 한가지 명심할 사항은 본인 실력보다 한두단계 앞선 사람으로 배우는 것이 실질적으로 큰 도움이 된다. 그래서 눈높이 교육이라는 얘기도 있지 않나 싶다.\n구인구직, 포트폴리오: 차곡차곡 누적된 블로그 게시물은 그 자체로 포트폴리오가 되고 헤드헌터를 통해 채용 인터뷰 요청을 받게 된다.",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#quarto_blog.qmd",
    "href": "dw_website.html#quarto_blog.qmd",
    "title": "1  웹사이트와 블로그",
    "section": "3.1 quarto_blog.qmd",
    "text": "3.1 quarto_blog.qmd\n_quarto.yml 파일에 지정된 웹사이트에서 블로그로 들어가는 메뉴에 들어간 파일명이 quarto_blog.qmd 이라 해당 파일에 블로그 설정을 담아낸다.\n---\ntitle: \"Quarto 데이터 과학\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: false\n---",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#웹사이트",
    "href": "dw_website.html#웹사이트",
    "title": "1  웹사이트와 블로그",
    "section": "",
    "text": "(정적) 웹사이트 배포",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#블로그-시작",
    "href": "dw_website.html#블로그-시작",
    "title": "1  웹사이트와 블로그",
    "section": "1.7 블로그 시작",
    "text": "1.7 블로그 시작\nQuarto 블로그 제작은 RStudio hugo, distill 블로그와 방식에서 몇가지 차이점이 있다.\nQuarto CLI 를 사용하는 경우 다음 명령어를 투사하게 되면 myblog 디렉토리 아래 블로그 기본 사항이 준비되어 블로그 제작을 시작할 수 있다.\nquarto create-project myblog --type website:blog\n다른 방식은 RStudio 에서 New Project를 선택한 후에 Quarto Blog 프로젝트를 시작하는 방식이다.",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  },
  {
    "objectID": "dw_website.html#블로그",
    "href": "dw_website.html#블로그",
    "title": "1  웹사이트와 블로그",
    "section": "1.6 블로그",
    "text": "1.6 블로그\n블로그를 작성하고 운영하는 이유를 다음과 같이 들 수 있다.\n\n학습: 강의를 듣거나 무언가 읽어 독서를 통해 학습되는 지식보다 글쓰기를 통해 축적되는 지식이 어떻게 보면 학습 효과가 더 크다. 특히, 학습한 내용을 코드로 작성하여 돌려볼 경우 학습효과를 배가시킨다.\n지식나눔: 구글 검색엔진을 통해 검색된 블로그 게시글을 통해 짧은 시간 학습에 도움을 받지만, 마찬가지로 본인이 작성한 블로그 게시글이 다른 사람에게 도움을 주는 것도 사실이다. 한가지 명심할 사항은 본인 실력보다 한두단계 앞선 사람으로 배우는 것이 실질적으로 큰 도움이 된다. 그래서 눈높이 교육이라는 얘기도 있지 않나 싶다.\n구인구직, 포트폴리오: 차곡차곡 누적된 블로그 게시물은 그 자체로 포트폴리오가 되고 헤드헌터를 통해 채용 인터뷰 요청을 받게 된다.\n\n\n1.6.1 블로그 시작\nQuarto 블로그 제작은 RStudio hugo, distill 블로그와 방식에서 몇가지 차이점이 있다.\nQuarto CLI 를 사용하는 경우 다음 명령어를 투사하게 되면 myblog 디렉토리 아래 블로그 기본 사항이 준비되어 블로그 제작을 시작할 수 있다.\nquarto create-project myblog --type website:blog\n다른 방식은 RStudio 에서 New Project를 선택한 후에 Quarto Blog 프로젝트를 시작하는 방식이다.\n\n\n\n\n\n\n\n1.6.2 블로그 미리보기\nQuarto CLI 를 통해 quarto.cmd preview 명령어를 통해 블로그를 출판하기 전에 로컬 컴퓨텅에서 확인이 가능하다. 2022년 4월 RMarkdown/Bookdown 에서 Quarto로 옮겨간 초창기 경험이 Nicholas Tierney (2022-04-11), “Notes on Changing from Rmarkdown/Bookdown to Quarto” 블로그에 잘 정리되어 있다.\nquarto.cmd preview는 윈도우의 경우고 맥이나 리눅스 계열은 quarto preview로 충분하다.\nquarto.cmd preview\n\n\n1.6.3 _quarto.yml 블로그 반영\n_quarto.yml 파일에 블로그 메뉴를 지정한다. 블로그 전용 웹사이트를 운영하는 경우 _quarto.yml 파일에 블로그에 맞춰 YAML 파일 구성을 하면 된다.\nwebsite:\n  title: \"Quarto 데이터 사이언스\"\n  site-url: https://quartopub.com/sites/statkclee/quarto-ds\n  twitter-card:\n    card-style: summary_large_image\n    description: \"한글 Quarto 첫걸음\"\n    image: \"fig/koRea_logo.png\"\n  page-footer:\n    left: \"[Quarto](https://quarto.org/) 로 제작\"\n  navbar:\n    background: \"#447099\"\n    left:\n      - href: index.qmd\n        text: \"Home\"\n      - href: quarto_blog.qmd     \n        text: \"Blog\"\n      - text: Quarto\n        menu:\n        - href: quarto_install.qmd\n          text: \"Quarto 설치/출판\"\n        - href: quarto_about.qmd\n          text: \"Quarto 소개\"\n        - href: quarto_slideshow.qmd\n          text: \"Quarto 슬라이드\"\n\n\n1.6.4 quarto_blog.qmd\n_quarto.yml 파일에 지정된 웹사이트에서 블로그로 들어가는 메뉴에 들어간 파일명이 quarto_blog.qmd 이라 해당 파일에 블로그 설정을 담아낸다.\n---\ntitle: \"Quarto 데이터 과학\"\nlisting:\n  contents: posts\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\npage-layout: full\ntitle-block-banner: false\n---\n\n\n1.6.5 _metadata.yml YAML\nQuarto 웹사이트 내부에 블로그를 내장하여 운영하는 것이기 때문에 관례상 posts\\ 디렉토리를 생성하여 관련 블로글 게시글을 각 폴더로 만들어 운영하는 것이 여러모로 유용하다.\nquarto\\\n|-- posts\\\n    |-- _metadata.yml\n    |-- quarto_blog_20220815\n        |-- index.qmd \n    |-- quarto_transfer_20220715\n        |-- index.qmd \n_metadata.yml YAML 파일에 블로그 설정을 담아낸다.\n# Options specified here will apply to all posts in this folder\n\n# freeze computational output\nfreeze: true\n\n# Enable banner style title blocks\ntitle-block-banner: false\n\n# Author name of all blog posts\nauthor: 'Victor Lee'\n\n# Table of content settings\ntoc: true\ntoc-depth: 3\n\npage-layout: article\n\n\n1.6.6 블로그 작성\n이제 블로그에 대한 게시글 작성에 대한 모든 것이 준비되어 index.qmd 파일에 Quarto 블로그 게시글을 작성하면 된다.\nposts\\quarto_blog_20220815\\index.qmd",
    "crumbs": [
      "저작물",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>웹사이트와 블로그</span>"
    ]
  }
]